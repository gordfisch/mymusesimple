<?php


/**
 * @version		$Id$
 * @package		mymuse
 * @copyright	Copyright Â© 2010 - Arboreta Internet Services - All rights reserved.
 * @license		GNU/GPL
 * @author		Gordon Fisch
 * @author mail	info@mymuse.ca
 * @website		http://www.mymuse.ca
 */

// no direct access
defined( '_JEXEC' ) or die( 'Restricted access' );

jimport( 'joomla.plugin.plugin');

/**
* MyMuse Payment Pesapal plugin
*
* @package 		MyMuse
* @subpackage	mymuse
*/
class plgMymusePaymentPesapal extends JPlugin 
{
	/**
	 * Load the language file on instantiation.
	 *
	 * @var    boolean
	 * @since  3.1
	 */
	protected $autoloadLanguage = true;
	
	/**
	 * Constructor
	 *
	 * @param   object  $subject  The object to observe
	 * @param   array   $config   An array that holds the plugin configuration
	 */
	function plgMymusePaymentPesapal(&$subject, $config)  {
		parent::__construct($subject, $config);
		if(!defined('DS')){
			define('DS',DIRECTORY_SEPARATOR);
		}
		$OAuthPath = JPATH_ROOT.DS.'plugins'.DS.'mymuse'.DS.'payment_pesapal'.DS.'OAuth.php';
		require($OAuthPath);


	}

	/**
	 * PesaPal Payment form
	 * onBeforeMyMusePayment
	 */
	function onBeforeMyMusePayment($shopper, $store, $order, $params, $Itemid=1 )
	{
		$mainframe &= JFactory::getApplication();
		
		$amount = $order->order_subtotal + @$order->tax_total + @$order->order_shipping->cost;
		$desc = '';
		for ($i=0;$i<$order->idx;$i++) { 
			$j = $i+1;
			$desc .= $order->items[$i]->title;
            if($params->get('my_show_sku')){
                $desc .= ' : '.$order->items[$i]->product_sku.' : ';
            }
            $desc .= $order->items[$i]->quantity.' : '.$order->items[$i]->product_item_price;
		}
		
		
		if($this->params->get('my_pesapal_mode') == "test"){
			$consumer_key 		= 'lhiP9QWtQQsXWU+G5HdFHEUr41COHMiI';//demo merchant key
			$consumer_secret 	= '5k6xJ7E0G5JFgUowlc+13SFEfkY=';//demo merchant secret
		}else{
			$consumer_key 		= $this->params->get('my_pesapal_consumer_key');
			$consumer_secret 	= $this->params->get('my_pesapal_consumer_secret');
		}
		
		//pesapal params
		$token = $params = NULL;
		
		$signature_method = new OAuthSignatureMethod_HMAC_SHA1();
		$iframelink = 'https://www.pesapal.com/api/PostPesapalDirectOrderV2';

		//get form details
		$amount = $amount;
		$amount = number_format($amount, 2);//format amount to 2 decimal places

		$desc 		= $desc;
		$type 		= "MERCHANT"; //default value = MERCHANT
		$reference 	= $order->order_number;//unique order id of the transaction, generated by merchant
		$first_name = $shopper->profile['first_name'];
		$last_name 	= $shopper->profile['last_name'];
		$email 		= $shopper->email;
		$username 	= $email; //same as email

		$phonenumber = '';//leave blank
		$payment_method = '';//leave blank
		$code = '';//leave blank

		//redirect url, the page that will handle the response from pesapal.
		$callback_url = JURI::base()."/index.php?option=com_mymuse&task=notify"; 

		$post_xml = "<?xml version=\"1.0\" encoding=\"utf-8\"?><PesapalDirectOrderInfo xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" Amount=\"".$amount."\" Description=\"".$desc."\" Code=\"".$code."\" Type=\"".$type."\" PaymentMethod=\"".$payment_method."\" Reference=\"".$reference."\" FirstName=\"".$first_name."\" LastName=\"".$last_name."\" Email=\"".$email."\" PhoneNumber=\"".$phonenumber."\" UserName=\"".$username."\" xmlns=\"http://www.pesapal.com\" />";
		$post_xml = htmlentities($post_xml);

		$consumer = new OAuthConsumer($consumer_key, $consumer_secret);

		//post transaction to pesapal
		$iframe_src = OAuthRequest::from_consumer_and_token($consumer, $token, "GET", $iframelink, $params);
		$iframe_src->set_parameter("oauth_callback", $callback_url);
		$iframe_src->set_parameter("pesapal_request_data", $post_xml);
		$iframe_src->sign_request($signature_method, $consumer, $token);

		//display pesapal - iframe and pass iframe_src
		$string = '
		<iframe src="'.$iframe_src.'" width="100%" height="620px" scrolling="no" frameBorder="0">
				<p>Browser unable to load iFrame</p>
		</iframe>';
		
		return $string; 
		
	} 

	/**
	 * notify
	 * catch the IPN post from Pesapal, return required responses, update orders and do mailouts
	 * 
	 */
	function onMyMuseNotify($params)
	{
		$mainframe &= JFactory::getApplication();

		
		$date = date('Y-m-d h:i:s');
		$debug = "#####################\nPesapal notify PLUGIN\n";

		$result = array();
		$result['plugin'] 				= "PesaPal";
		$result['myorder'] 				= 0; //must be >0 to trigger that it was this plugin
		$result['message_sent'] 		= 0; //must be >0 or tiggers error
		$result['message_received'] 	= 0; //must be >0 or tiggers error
		$result['order_found']			= 0; //must be >0 or tiggers error
		$result['order_verified'] 		= 0; //must be >0 or tiggers error
		$result['order_completed'] 		= 0; //must be >0 or tiggers error
		$result['order_number']			= 0; //must be >0 or tiggers error
		$result['order_id']				= 0; //must be >0 or tiggers error
		$result['payer_email']			= 0; 
		$result['payment_status']		= 0;
		$result['txn_id']				= 0;
		$result['error']				= '';


		if(!isset($_GET['pesapal_transaction_status'])){
			//wasn't pesapal
			$debug .= "Was not Pesapal. \n";
			$debug .= "-------END-------";
			if($params->get('my_debug')){
        		MyMuseHelper::logMessage( $debug  );
  			}
  			return $result;
		}
		$result['myorder'] = 1;
		$result['message_sent'] = 1;
		$result['message_received'] = 1;
		
		if($params->get('my_debug')){
			$debug = "Was Pesapal. \n";
			$debug .= "_GET = \n";
			$debug .= print_r($_GET, true);
			MyMuseHelper::logMessage( $debug  );
		}

		
		//JPluginHelper::importPlugin('mymuse');
		$result['order_number'] 		= $_GET['pesapal_merchant_reference'];
  		$result['txn_status'] 			= $_GET['pesapal_transaction_status'];
  		$result['txn_id'] 				= $_GET['pesapal_transaction_tracking_id'];
		$result['amountin'] 			= '';
        $result['currency'] 			= '';

        	
        if ( $_GET['pesapal_transaction_status'] == "CONFIRMED" || $_GET['pesapal_transaction_status'] == "COMPLETED") {
        	//order was verified!
        	$date = date('Y-m-d h:i:s');
        	$debug .= "$date  1. order ".$_GET['pesapal_transaction_status']. "at Pesapal\n\n";
        	$result['order_verified'] = 1;

        	// Get the Order Details from the database

        	$query = "SELECT * FROM `#__mymuse_order`
                    WHERE `order_number`='".$result['order_number']."'";
        	$date = date('Y-m-d h:i:s');
        	$debug .= "$date  4.1 $query \n\n";
        	$db	= & JFactory::getDBO();
        	$db->setQuery($query);
        	if(!$this_order = $db->loadObject()){
        		$debug .= "2. !!!!Error no order object: ".$db->_errorMsg."\n\n";
        		$debug .= "-------END-------";
        		if($params->get('my_debug')){
        			MyMuseHelper::logMessage( $debug  );
        		}
        		$result['error'];
        		return $result;
        	}else{
        		// ALL IS GOOD!
        		// update the payment status
        		$result['order_found']  = 1;
        		$result['order_id'] 	= $this_order->id;
        		MyMuseHelper::orderStatusUpdate($result['order_id'] , "C");
        		$date = date('Y-m-d h:i:s');
        		$debug .= "$date 3. order COMPLETED at Pesapal, update in DB\n\n";
        		$result['order_completed'] = 1;
        		$result['order_verified]'] = 1;
        		$result['redirect'] = JURI::base().'index.php?option=com_mymuse&task=thankyou';
        		 
        	}

        }elseif ($_GET['pesapal_transaction_status'] == "PENDING" ) {
        	//not verified
        	$date = date('Y-m-d h:i:s');
        	$debug .= "$date 3. PENDING at Pesapal\n\n";
        	$debug .= "-------END-------";
        	if($params->get('my_debug')){
        		MyMuseHelper::logMessage( $debug  );
        	}
        	$result['error'] = "Payment is Pending";
        	return $result;

        }elseif ($_GET['pesapal_transaction_status'] == "CANCELLED" ) {
        	//not verified
        	$date = date('Y-m-d h:i:s');
        	$debug .= "$date 3. Status ".$_GET['pesapal_transaction_status']." at Pesapal\n\n";
        	$debug .= "-------END-------";
        	if($params->get('my_debug')){
        		MyMuseHelper::logMessage( $debug  );
        	}
        	$result['error'] = $_GET['pesapal_transaction_status'];
        	return $result;
        }

        $date = date('Y-m-d h:i:s');
        $debug .= "$date Finished talking to Pesapal \n\n";
		$debug .= "-------END-------";
  		if($params->get('my_debug')){
        	MyMuseHelper::logMessage( $debug  );
  		}
        return $result;

	}
	
	function onAfterMyMusePayment()
	{
	
		$email_msg = "paymentpaypal:".preg_replace("/\\n/","<br />",$this->params->get('email_msg'));
		return $email_msg;
	
	}
}

?>