<?php


/**
 * @version		$Id$
 * @package		mymuse
 * @copyright	Copyright Â© 2010 - Arboreta Internet Services - All rights reserved.
 * @license		GNU/GPL
 * @author		Gordon Fisch
 * @author mail	info@mymuse.ca
 * @website		http://www.mymuse.ca
 */

// no direct access
defined( '_JEXEC' ) or die( 'Restricted access' );

jimport( 'joomla.plugin.plugin');

/**
* MyMuse Payment Pesapal plugin
*
* @package 		MyMuse
* @subpackage	mymuse
*/
class plgMymusePaymentPesapal extends JPlugin 
{
	/**
	 * Load the language file on instantiation.
	 *
	 * @var    boolean
	 * @since  3.1
	 */
	protected $autoloadLanguage = true;
	
	/**
	 * Constructor
	 *
	 * @param   object  $subject  The object to observe
	 * @param   array   $config   An array that holds the plugin configuration
	 */
	function plgMymusePaymentPesapal(&$subject, $config)  {
		parent::__construct($subject, $config);
		if(!defined('DS')){
			define('DS',DIRECTORY_SEPARATOR);
		}
		$OAuthPath = JPATH_ROOT.DS.'plugins'.DS.'mymuse'.DS.'payment_pesapal'.DS.'OAuth.php';
		require($OAuthPath);


	}

	/**
	 * PesaPal Payment form
	 * onBeforeMyMusePayment
	 */
	function onBeforeMyMusePayment($shopper, $store, $order, $params, $Itemid=1 )
	{
		$mainframe &= JFactory::getApplication();
		
		$amount = $order->order_subtotal + @$order->tax_total + @$order->order_shipping->cost;
		$desc = '';
		for ($i=0;$i<$order->idx;$i++) { 
			$j = $i+1;
			$desc .= $order->items[$i]->title;
            if($params->get('my_show_sku')){
                $desc .= ' : '.$order->items[$i]->product_sku.' : ';
            }
            $desc .= $order->items[$i]->quantity.' : '.$order->items[$i]->product_item_price;
		}
		
		
		if($this->params->get('my_pesapal_mode') == "test"){
			$consumer_key 		= $this->params->get('test_pesapal_consumer_key');
			$consumer_secret 	= $this->params->get('test_pesapal_consumer_secret');
			$iframelink = 'http://demo.pesapal.com/api/PostPesapalDirectOrderV4';
		}else{
			$consumer_key 		= $this->params->get('my_pesapal_consumer_key');
			$consumer_secret 	= $this->params->get('my_pesapal_consumer_secret');
			$iframelink = 'https://www.pesapal.com/API/PostPesapalDirectOrderV4';
		}
		
		//pesapal params
		$token = $params = NULL;
		
		$signature_method = new OAuthSignatureMethod_HMAC_SHA1();

		//get form details
		$amount = $amount;
		$amount = number_format($amount, 2);//format amount to 2 decimal places

		$type 		= "MERCHANT"; //default value = MERCHANT
		$reference 	= $order->order_number;//unique order id of the transaction, generated by merchant
 		list($first,$last) = explode(' ',$shopper->name);
		$first_name = isset($shopper->profile['first_name'])? $shopper->profile['first_name'] : $first;
		$last_name 	= isset($shopper->profile['last_name'])? $shopper->profile['last_name'] : $last;
		$email 		= $shopper->email;
		$username 	= $email; //same as email

		$phonenumber = isset($shopper->profile['phone'])? $shopper->profile['phone'] : '';
		$payment_method = '';//leave blank
		$code = '';//leave blank

		//redirect url, the page that will handle the response from pesapal.
		$callback_url = JURI::base()."/index.php?option=com_mymuse&task=thankyou&pp=pesapal&Itemid=".$Itemid;
		
		$post_xml = "<?xml version=\"1.0\" encoding=\"utf-8\"?><PesapalDirectOrderInfo xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" Amount=\"".$amount."\" Description=\"".$desc."\" Type=\"".$type."\" Reference=\"".$reference."\" FirstName=\"".$first_name."\" LastName=\"".$last_name."\" Email=\"".$email."\" PhoneNumber=\"".$phonenumber."\" xmlns=\"http://www.pesapal.com\" />";
		$post_xml = htmlentities($post_xml);

		$consumer = new OAuthConsumer($consumer_key, $consumer_secret);

		//post transaction to pesapal
		$iframe_src = OAuthRequest::from_consumer_and_token($consumer, $token, "GET", $iframelink, $params);
		$iframe_src->set_parameter("oauth_callback", $callback_url);
		$iframe_src->set_parameter("pesapal_request_data", $post_xml);
		$iframe_src->sign_request($signature_method, $consumer, $token);

		//display pesapal - iframe and pass iframe_src
		$string = '';
		if($this->params->get('my_pesapal_mode') == "test"){
			$date = date('Y-m-d H:i:s');
			$string .= "Reference #: $reference <br />";
			$string .= "Date: $date <br />";
			$string .= $post_xml."<br />";
			$string .= "iframe_src: $iframe_src <br />";
		}	
        $string .=	'
		<iframe src="'.$iframe_src.'" width="100%" height="700px" scrolling="no" frameBorder="0">
				<p>Browser unable to load iFrame</p>
		</iframe>';
		
		return $string; 
		
	} 

	/**
	 * notify
	 * catch the IPN post from Pesapal, return required responses, update orders and do mailouts
	 * 
	 */
	function onMyMuseNotify($params)
	{
		$mainframe &= JFactory::getApplication();
		$db	= & JFactory::getDBO();
		
		$date = date('Y-m-d h:i:s');
		$debug = "$date\n#####################\nPesapal notify PLUGIN\n";

		$result = array();
		$result['plugin'] 				= "paymentpesapal";
		$result['myorder'] 				= 0; //must be >0 to trigger that it was this plugin
		$result['message_sent'] 		= 0; //must be >0 or tiggers error
		$result['message_received'] 	= 0; //must be >0 or tiggers error
		$result['order_found']			= 0; //must be >0 or tiggers error
		$result['order_verified'] 		= 0; //must be >0 or tiggers error
		$result['order_completed'] 		= 0; //must be >0 or tiggers error
		$result['order_number']			= 0; //must be >0 or tiggers error
		$result['order_id']				= 0; //must be >0 or tiggers error
		$result['payer_email']			= 0; 
		$result['payment_status']		= 0;
		$result['txn_id']				= 0;
		$result['transaction_status']	= 0;
		$result['error']				= '';


		if(!isset($_GET['pesapal_notification_type'])){
			//wasn't pesapal
			$debug .= "Was not Pesapal. \n";
			$debug .= "-------END-------";
			if($params->get('my_debug')){
        		MyMuseHelper::logMessage( $debug  );
  			}
  			return array();
		}
		$result['myorder'] = 1;
		$result['message_sent'] = 1;
		$result['message_received'] = 1;
		
		if($params->get('my_debug')){
			$debug .= "Was Pesapal. \n";
			$debug .= "_GET = \n";
			$debug .= print_r($_GET, true);
			MyMuseHelper::logMessage( $debug  );
		}
		
		if($this->params->get('my_pesapal_mode') == "test"){
			$consumer_key 		= $this->params->get('test_pesapal_consumer_key');
			$consumer_secret 	= $this->params->get('test_pesapal_consumer_secret');
			$statusrequestAPI = 'http://demo.pesapal.com/api/querypaymentstatus';
			//$statusrequestAPI 	= 'http://localhost/mymusetest25/index.php?option=com_mymuse&task=send_status';
		}else{
			$consumer_key 		= $this->params->get('my_pesapal_consumer_key');
			$consumer_secret 	= $this->params->get('my_pesapal_consumer_secret');
			$statusrequestAPI 	= 'https://www.pesapal.com/api/querypaymentstatus';
			
		}

		// Parameters sent to you by PesaPal IPN
		$pesapalNotification=$_GET['pesapal_notification_type'];
		$pesapalTrackingId=$_GET['pesapal_transaction_tracking_id'];
		$pesapal_merchant_reference=$_GET['pesapal_merchant_reference'];
		
		//JPluginHelper::importPlugin('mymuse');
		$result['order_number'] 		= $_GET['pesapal_merchant_reference'];
		$result['txn_id'] 				= $_GET['pesapal_transaction_tracking_id'];
		
		$result['amountin'] 			= '';
		$result['currency'] 			= '';
		$status = '';
		
		if($pesapalNotification=="CHANGE" && $pesapalTrackingId!='')
		{
			$token = $pesa_params = NULL;
			$consumer = new OAuthConsumer($consumer_key, $consumer_secret);
			$signature_method = new OAuthSignatureMethod_HMAC_SHA1();
		
			//get transaction status
			$request_status = OAuthRequest::from_consumer_and_token($consumer, $token, "GET", $statusrequestAPI, $pesa_params);
			$request_status->set_parameter("pesapal_merchant_reference", $pesapal_merchant_reference);
			$request_status->set_parameter("pesapal_transaction_tracking_id",$pesapalTrackingId);
			$request_status->sign_request($signature_method, $consumer, $token);
			
			//ONLY FOR TEST!!!!!!!!!!
			//$request_status = $statusrequestAPI;
			
			
			if($params->get('my_debug')){
				$debug = "1.0 Sending status request to pesapal URL = \n".$request_status."\n";
				MyMuseHelper::logMessage( $debug  );
			}
		
			$ch = curl_init();
			curl_setopt($ch, CURLOPT_URL, $request_status);
			curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
			curl_setopt($ch, CURLOPT_HEADER, 1);
			curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, 0);
			if(defined('CURL_PROXY_REQUIRED')) if (CURL_PROXY_REQUIRED == 'True')
			{
				$proxy_tunnel_flag = (defined('CURL_PROXY_TUNNEL_FLAG') && strtoupper(CURL_PROXY_TUNNEL_FLAG) == 'FALSE') ? false : true;
				curl_setopt ($ch, CURLOPT_HTTPPROXYTUNNEL, $proxy_tunnel_flag);
				curl_setopt ($ch, CURLOPT_PROXYTYPE, CURLPROXY_HTTP);
				curl_setopt ($ch, CURLOPT_PROXY, CURL_PROXY_SERVER_DETAILS);
			}
		
			$response = curl_exec($ch);
			
			if($params->get('my_debug')){
				$debug = "1.1 Response from Pesapal = \n".$response."\n";
				MyMuseHelper::logMessage( $debug  );
			}
		
			$header_size = curl_getinfo($ch, CURLINFO_HEADER_SIZE);
			$raw_header  = substr($response, 0, $header_size - 4);
			$headerArray = explode("\r\n\r\n", $raw_header);
			$header      = $headerArray[count($headerArray) - 1];
		
			//transaction status
			$elements 					= preg_split("/=/",substr($response, $header_size));
			$status 					= $elements[1];
			$result['payment_status']	= $status;
		
			curl_close ($ch);
			 
			//UPDATE YOUR DB TABLE WITH NEW STATUS FOR TRANSACTION WITH pesapal_transaction_tracking_id $pesapalTrackingId
			if($params->get('my_debug')){
				$debug = "1.2 Status from Pesapal = \n".$status."\n";
				MyMuseHelper::logMessage( $debug  );
			}

			
			if ( $status == "CONFIRMED" || $status == "COMPLETED") {
				//order was verified!
				$date = date('Y-m-d h:i:s');
				$result['order_verified'] = 1;
			
				// Get the Order Details from the database
				$query = "SELECT o.*,u.email FROM `#__mymuse_order` as o
				LEFT JOIN #__users as u ON u.id = o.user_id
				WHERE `order_number`='".$result['order_number']."'";
			
				$db	= & JFactory::getDBO();
				$db->setQuery($query);
				if(!$this_order = $db->loadObject()){
					$debug = "2. !!!!Error no order object: ".$query." ".$db->_errorMsg."\n\n";
					$debug .= "-------END-------";
					if($params->get('my_debug')){
						MyMuseHelper::logMessage( $debug  );
					}
					$result['error'];
					return $result;
				}elseif($this_order->order_status == "C"){
					//this order has already been confirmed
					$debug = "2. Order was alredy confirmed status: ".$this_order->order_status."\n\n";
					$debug .= "-------END-------";
					if($params->get('my_debug')){
						MyMuseHelper::logMessage( $debug  );
					}
					$result['order_completed'] == "ALREADY_COMPLETED";
				}else{
					// ALL IS GOOD!
					// update the payment status
					$result['order_found']  = 1;
					$result['order_id'] 	= $this_order->id;
					MyMuseHelper::orderStatusUpdate($result['order_id'] , "C");
					$date = date('Y-m-d h:i:s');
					$debug = "$date 3. order COMPLETED at Pesapal, update in DB\n\n";
					if($params->get('my_debug')){
						MyMuseHelper::logMessage( $debug  );
					}
					$result['order_completed'] = 1;
					$result['order_verified]'] = 1;
					$result['payment_status'] = $status;
					$result['transaction_status'] = $status;
					$result['payer_email'] = $this_order->email;
					$result['amountin'] = $this_order->order_subtotal;
					$result['currency'] = $this_order->order_currency;
				}
			
			}elseif ($status == "PENDING" ) {
				//not verified
				$date = date('Y-m-d h:i:s');
				$debug .= "$date 3. PENDING at Pesapal\n\n";
				$debug .= "-------END PLUGIN-------";
				if($params->get('my_debug')){
					MyMuseHelper::logMessage( $debug  );
				}
				$result['error'] = "Payment is Pending";
				return $result;
			
			}elseif ($status == "CANCELLED" ) {
				//not verified
				$date = date('Y-m-d h:i:s');
				$debug .= "$date 3. Status ".$_GET['pesapal_transaction_status']." at Pesapal\n\n";
				$debug .= "-------END PLUGIN-------";
				if($params->get('my_debug')){
					MyMuseHelper::logMessage( $debug  );
				}
				$result['error'] = $_GET['pesapal_transaction_status'];
				return $result;
			}elseif ($status == "INVALID" ) {
				//not verified
				$date = date('Y-m-d h:i:s');
				$debug .= "$date 3. Status ".$_GET['pesapal_transaction_status']." at Pesapal\n\n";
				$debug .= "-------END PLUGIN-------";
				if($params->get('my_debug')){
					MyMuseHelper::logMessage( $debug  );
				}
				$result['error'] = $_GET['pesapal_transaction_status'];
				return $result;
			}
				
			$date = date('Y-m-d h:i:s');
			$debug = "$date Finished talking to Pesapal \n\n";
			$debug .= "-------END PLUGIN-------";
			if($params->get('my_debug')){
				MyMuseHelper::logMessage( $debug  );
			}
				
			return $result;
		}		
	}
	
	function onAfterMyMusePayment()
	{
	
		$email_msg = '';
		if($this->params->get('email_msg')){
			$email_msg = "payment_pesapal:".preg_replace("/\\n/","<br />",$this->params->get('email_msg'));
		
		}
		return $email_msg;
	
	}
}

?>